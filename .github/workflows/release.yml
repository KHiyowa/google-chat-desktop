name: Build and Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        architecture: [x64, arm64]

    env:
      SOLUTION_FILE: google-chat-desktop.sln

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release

      - name: Publish
        run: dotnet publish ${{ env.SOLUTION_FILE }} --configuration Release --runtime win-${{ matrix.architecture }} --output ./publish

      - name: Create zip archive
        run: |
          mkdir -p pub_temp/google-chat-desktop
          mv publish/* pub_temp/google-chat-desktop
          cd pub_temp
          powershell Compress-Archive -Path google-chat-desktop -DestinationPath ../google-chat-desktop-${{ matrix.architecture }}-${{ github.ref_name }}.zip
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: google-chat-desktop-${{ matrix.architecture }}-${{ github.ref_name }}
          path: google-chat-desktop-${{ matrix.architecture }}-${{ github.ref_name }}.zip

  create_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download x64 artifact
        uses: actions/download-artifact@v3
        with:
          name: google-chat-desktop-x64-${{ github.ref_name }}
          path: ./x64

      - name: Download arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: google-chat-desktop-arm64-${{ github.ref_name }}
          path: ./arm64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload x64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./x64/google-chat-desktop-x64-${{ github.ref_name }}.zip
          asset_name: google-chat-desktop-x64-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload arm64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arm64/google-chat-desktop-arm64-${{ github.ref_name }}.zip
          asset_name: google-chat-desktop-arm64-${{ github.ref_name }}.zip
          asset_content_type: application/zip